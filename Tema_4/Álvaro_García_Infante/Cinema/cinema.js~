// Definir el tamaño de la matriz de butacas
const N = 3; // Número de filas
const M = 5; // Número de butacas

// Función para inicializar la matriz de butacas
function setup() {
    let idContador = 1; // Iniciar el contador de IDs en 1 (los humanos no empezamos a contar desde 0)
    let butacas = [];

    for (let i = 0; i < N; i++) {
        // Nueva fila
        let fila = [];
        for (let j = 0; j < M; j++) {
            // Nuevo asiento
            fila.push({
                id: idContador++,
                estado: false // Estado inicial libre
            });
        }
        butacas.push(fila);
    }
    return butacas;
}

// Inicializar la matriz
let butacas = setup();

/**
 * Función para sugerir asientos disponibles.
 * Se reserva buscando los asientos consecutivos en la fila más lejana a la pantalla.
 *
 * @param {number} nSeats - Número de asientos consecutivos requeridos.
 * @returns {Set<number>} - Conjunto de IDs de los asientos reservados.
 */
function suggest(nSeats) {
    const tempSeats = new Set();
    if (nSeats <= N) {
        for (let i = N - 1; i >= 0 && tempSeats.size < nSeats; i--) {
            tempSeats.clear(); // Aseguramos que el set está vacío antes de buscar asientos en la fila.
            for (let j = 0; j < M && tempSeats.size < nSeats && M - j >= nSeats - tempSeats.size; j++) {
                if (!butacas[i][j].estado) {
                    tempSeats.add(butacas[i][j].id);
                } else {
                    tempSeats.clear();
                }
            }
        }
    }
    console.log("Asientos sugeridos: " + Array.from(tempSeats).join(","));
    reserve(tempSeats)
    return tempSeats;
}


// Función para reservar asientos
function reserve(seatsToReserve) {
    for (let seatId of seatsToReserve) {
        butacas[Math.floor((seatId - 1) / M)][(seatId - 1) % M].estado = true;
        const seatButton = document.querySelector(`[data-seat="${seatId}"]`);
        if (seatButton) {
            seatButton.classList.remove("available");
            seatButton.classList.add("unavailable");
            seatButton.disabled = true;
        }
    }
}

document.addEventListener("DOMContentLoaded", () => {
    const seatInput = document.getElementById("seats");
    const reservationForm = document.getElementById("reservation-form");

    seatInput.addEventListener("input", (e) => {
        const nSeats = parseInt(e.target.value, 10);
        if (nSeats > 0 && nSeats <= 5) {
            suggest(nSeats);
        }
    });
});